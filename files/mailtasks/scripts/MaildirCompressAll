#!/bin/bash

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

MAIL_ROOTDIR=/var/spool/mail

MAIL_USER=mail
MAIL_GROUP=mail

RC=0 

if [[ $1 == "" ]]
then
	echo $0 " "
	exit -1
fi

Threshold=$1

if [ ${Threshold} -ge 25 ]
then
	for MailDir in $( find ${MAIL_ROOTDIR} -type d )
	do
		if [ -f "${MailDir}/maildirfolder" -a -d "${MailDir}/cur" -a ! $(basename ${MailDir}) = "Spam" ]
		then 
			nb=$( find "${MailDir}/cur/" -type f -mtime +${Threshold} -a \( -iname '*,S=*[^Z]' -o -iname '*.hestia,W=*:2,*[^Z]' \) | wc -l )

			if [ $nb -gt 0 ]
			then
				echo "Adquiring maildirlock on ${MailDir}"
				if PID=$(/usr/libexec/dovecot/maildirlock "${MailDir}" 20)
				then
					nb_files=0 ; nb_zipped=0 ; nb_errors=0
					for file in $( find "${MailDir}/cur/" -type f -mtime +${Threshold} -a \( -iname '*,S=*[^Z]' -o -iname '*.hestia,W=*:2,*[^Z]' \) )
					do
						mailfile=$( basename ${file} )

						if [ -s "${MailDir}/cur/${mailfile}" ]
						then
							file ${MailDir}/cur/${mailfile} | grep 'compressed data'  > /dev/null
							zip_filetype=$?

							if [ ${zip_filetype} -ne 0 ]
							then
								echo "   Zipping ${mailfile}"

								bzip2 -9 "${MailDir}/cur/${mailfile}" -c > "${MailDir}/tmp/${mailfile}Z"
								if [ $? -eq 0 ]
								then
									touch -r "${MailDir}/cur/${mailfile}" "${MailDir}/tmp/${mailfile}Z"
									chown ${MAIL_USER}:${MAIL_GROUP} "${MailDir}/tmp/${mailfile}Z"
									chmod 600 "${MailDir}/tmp/${mailfile}Z"

									mv "${MailDir}/tmp/${mailfile}Z" "${MailDir}/cur/"
									rm "${MailDir}/cur/${mailfile}"
									nb_zipped=$(( $nb_zipped + 1 ))
								else
									echo "! Error while zipping"
									rm "${MailDir}/tmp/${mailfile}Z"
									nb_errors=$(( $nb_errors + 1 ))
								fi
							else
								echo "  ${MailDir}/cur/${mailfile} is already compressed"
							fi
						else
							echo "  ${MailDir}/cur/${mailfile} is empty"
						fi

						nb_files=$(( $nb_files + 1 ))
					done

					echo ".. ${nb_files} files scanned."
					echo ".. ${nb_zipped} files zipped."
					echo ".. ${nb_errors} files with errors (untouched)."

					echo "Releasing maildirlock"
					kill $PID
				else
					echo "lock failed"
				fi
			fi
		fi
	done
else
	echo "${Threshold} must be over 25."
	RC=1
fi

exit $RC
